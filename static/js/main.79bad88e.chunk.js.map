{"version":3,"sources":["assets/loading.gif","reducers/attributes.js","reducers/scores/bodyMeasurements.js","reducers/scores/sleepingPosition.js","reducers/scores/mattressType.js","reducers/scores/index.js","reducers/pillowSizeByScore.js","reducers/config.js","reducers/index.js","components/Fieldset.js","components/ScoreLabel.js","components/Input.js","actions/index.js","components/RangeInput.js","components/BodyMeasurements.js","components/RadioInput.js","components/SleepingPosition.js","components/MattressType.js","components/FormFooter.js","components/PillowModal.js","components/PillowForm.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","attributes","state","arguments","length","undefined","action","type","Object","objectSpread","defineProperty","attributeName","value","MEASUREMENTS_THRESHOLDS","shoulders","neck","head","earToShoulder","getScoreForAttribute","thresholds","index","findIndex","measurement","Error","concat","scoreForValue","sumTotal","total","current","parseInt","bodyMeasurements","hasOwnProperty","SLEEPING_POSITION_SCORES","bellyDown","backDown","lateralLeaning","lateral","sleepingPosition","sleepingPositionScore","MATTESS_TYPE_SCORES","watterBed","soft","medium","hard","mattressType","mattressTypeScore","totalScore","_ref","scores","values","reduce","fromSleepingPosition","fromMattressType","combineReducers","SCORE_THRESHOLDS","maximumScore","pillow","getPillowSizeByScore","score","flow","sortBy","find","thru","emptyConfig","pillows","small","big","pictures","example","reducer","config","status","Fieldset","props","react_default","a","createElement","className","legend","children","ScoreLabel","min","max","prefix","Input","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","bind","assertThisInitialized","isCheckable","checked","defaultChecked","defaultValue","dispatch","isChecked","setInitialValues","dispatchUpdateAttribute","name","initialValue","event","target","_this$props","inputProps","objectWithoutProperties","assign","onInput","onChange","React","PureComponent","connect","RangeInput","label","defaultInputProps","htmlFor","components_Input","components_ScoreLabel","BodyMeasurements","components_Fieldset","components_RangeInput","alt","src","RadioInput","SleepingPosition","components_RadioInput","MattressType","FormFooter","PillowModal","showModal","onCloseModalClick","lib_default","isOpen","contentLabel","onClick","height","picture","loading","PillowForm","formSubmitHandler","preventDefault","setState","onSubmit","components_BodyMeasurements","components_SleepingPosition","components_MattressType","components_FormFooter","components_PillowModal","getPillows","size","fromScores","getPillow","components_PillowForm","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","fetch","pillowsJSON","then","response","json","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+YCSzBC,EATI,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzC,OAAQC,EAAOC,MACb,IAAK,mBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIN,EAAXM,OAAAE,EAAA,EAAAF,CAAA,GAAmBF,EAAOK,cAAgBL,EAAOM,QACnD,QACE,OAAOV,sBCDPW,EAA0B,CAC1BC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3CC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3CC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACpDC,cAAe,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAW/CC,EAAuB,SAACP,EAAeC,GAAhB,OANP,SAACA,EAAOO,GAC5B,IAAMC,EAAQC,IAAUF,EAAY,SAACG,GAAD,OAAkBV,GAASU,IAC/D,IAAc,IAAXF,EAAgB,MAAM,IAAIG,MAAJ,qCAAAC,OAA+CZ,IACxE,OAAOQ,EAAQ,EAIfK,CAAcb,EATuBC,EASFF,IAT0C,KA4BzEe,EAAW,SAACC,EAAOC,GAAR,OAAoBD,EAAQE,SAASD,EAAS,KAGhDE,EApBU,WAAwB,IAAvB5B,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAAK,mBAEH,OAAGM,EAAwBkB,eAAezB,EAAOK,eACxCH,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADLM,OAAAE,EAAA,EAAAF,CAAA,GAEGF,EAAOK,cAAgBO,EAAqBZ,EAAOK,cAAeL,EAAOM,SAGrEV,EAEX,QACE,OAAOA,ICnCP8B,EAA2B,CAC/BC,UAAW,EACXC,SAAU,IACVC,eAAgB,IAChBC,QAAS,KAuBIC,EApBU,WAAuB,IAAtBnC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAAGG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOC,MACb,IAAK,mBAEH,GAA4B,qBAAzBD,EAAOK,cAAsC,CAC9C,IAAM2B,EAAwBN,EAAyB1B,EAAOM,OAC9D,QAA6BP,IAA1BiC,EACD,MAAM,IAAIf,MAAJ,8BAAAC,OAAwClB,EAAOK,cAA/C,uBAAAa,OAAkFlB,EAAOM,QAEjG,OAAO0B,EAEP,OAAOpC,EAEX,QACE,OAAOA,ICrBPqC,EAAsB,CAC1BC,UAAW,EACXC,KAAM,IACNC,OAAQ,IACRC,KAAM,KAuBOC,EApBM,WAAuB,IAAtB1C,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAAGG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACb,IAAK,mBAEH,GAA4B,iBAAzBD,EAAOK,cAAkC,CAC1C,IAAMkC,EAAoBN,EAAoBjC,EAAOM,OACrD,QAAyBP,IAAtBwC,EACD,MAAM,IAAItB,MAAJ,8BAAAC,OAAwClB,EAAOK,cAA/C,uBAAAa,OAAkFlB,EAAOM,QAEjG,OAAOiC,EAEP,OAAO3C,EAEX,QACE,OAAOA,ICfA4C,EAAa,SAAAC,GAAA,IHkCC7C,EGlCE8C,EAAHD,EAAGC,OAAH,OHkCC9C,EGjCO8C,EAAOlB,iBHiCJtB,OAAOyC,OAAO/C,GAAOgD,OAAOxB,EAAU,GCfjD,kBAAAvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,EEjB5CgD,CAAgCH,EAAOX,kBDiBf,kBAAAlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAgB,EChBxCiD,CAA4BJ,EAAOJ,eAQtBI,EANAK,YAAgB,CAC7BvB,mBACAO,mBACAO,yFCPIU,EAAmB,CACvB,CAAEC,aAAc,GAAIC,OAAQ,SAC5B,CAAED,aAAc,GAAIC,OAAQ,UAC5B,CAAED,aAAc,GAAIC,OAAQ,QAYfC,EATc,SAACC,GAAyC,IAAlCvC,EAAkChB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBmD,EAChD,OAAOK,IACNC,IAAO,CAAE,iBACTC,IAAK,SAAAd,GAAA,IAAGQ,EAAHR,EAAGQ,aAAH,OAAsBG,GAASH,IACpCO,IAAKtD,QAHCmD,CAILxC,GACDqC,QCnBGO,EAAc,CAClBC,QAAS,CACPC,MAAO,GACPvB,OAAQ,GACRwB,IAAK,IAEPC,SAAU,CACRC,QAAS,KCEEC,EAFChB,YAAgB,CAAEpD,aAAY+C,SAAQsB,ODIvC,WAAiC,IAAhCpE,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB4D,EAAazD,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOC,MACb,IAAK,eACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAUI,EAAOgE,OAA7B,CAAqCC,OAAQ,UAC/C,QACE,OAAOrE,sDEFEsE,QAVE,SAACC,GAAD,OACfC,EAAAC,EAAAC,cAAA,YAAUC,UAAU,kBAClBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBJ,EAAMK,QAC3CJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZJ,EAAMM,qBCcEC,EAJI,SAAAjC,GAAA,IAAEnB,EAAFmB,EAAEnB,QAASqD,EAAXlC,EAAWkC,IAAKC,EAAhBnC,EAAgBmC,IAAhB,OACjBR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAHJ,SAACjD,EAASqD,EAAKC,GAAf,OAVC,SAACtD,EAASqD,EAAKC,GAC5B,OAAItD,IAAYqD,EAJJ,MAMDrD,IAAYsD,EALb,MAQD,GAI0BC,CAAOvD,EAASqD,EAAKC,GAAO,IAAMtD,EAAU,MAG7C8B,CAAM9B,EAASqD,EAAKC,KCflDE,cACJ,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAA+E,KAAAH,IACjBC,EAAA7E,OAAAgF,EAAA,EAAAhF,CAAA+E,KAAA/E,OAAAiF,EAAA,EAAAjF,CAAA4E,GAAAM,KAAAH,KAAMd,KAEDkB,gBAAkBN,EAAKM,gBAAgBC,KAArBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAA6E,KAHNA,2EAOjB,OAAOE,KAAKO,gBAAkBP,KAAKd,MAAMsB,SAAWR,KAAKd,MAAMuB,sDAI/D,MAA2B,aAApBT,KAAKd,MAAMlE,MAA2C,UAApBgF,KAAKd,MAAMlE,4CAIpD,OAAOgF,KAAKd,MAAM7D,OAAS2E,KAAKd,MAAMwB,6DAGhBtF,EAAeC,GCxBjB,IAAAmC,EDyBpBwC,KAAKd,MAAMyB,SCzBwC,CACrD3F,KAAM,mBACNI,eAFsBoC,EDyBgB,CAAEpC,gBAAeC,UCzB9BD,cAGzBC,MAHsBmC,EAAkBnC,oDD6BnC2E,KAAKO,gBAAkBP,KAAKY,aAE/BZ,KAAKa,8DAILb,KAAKc,wBAAwBd,KAAKd,MAAM6B,KAAMf,KAAKgB,wDAGrCC,GACdjB,KAAKc,wBAAwBG,EAAMC,OAAOH,KAAME,EAAMC,OAAO7F,wCAGtD,IAAA8F,EAC4BnB,KAAKd,MAAnBkC,GADdD,EACCR,SADD1F,OAAAoG,EAAA,EAAApG,CAAAkG,EAAA,eAEP,OACEhC,EAAAC,EAAAC,cAAA,QAAApE,OAAAqG,OAAA,GAAWF,EAAX,CAAuBG,QAASvB,KAAKI,gBAAiBoB,SAAUxB,KAAKI,0BAxCvDqB,IAAMC,eA+CX7B,EAFfA,EAAQ8B,cAAU9B,GE1BH+B,EAlBI,SAAC1C,GAAU,IACpB7D,EAAgC6D,EAAhC7D,MAAOwG,EAAyB3C,EAAzB2C,MAAUT,EADGnG,OAAAoG,EAAA,EAAApG,CACYiE,EADZ,mBAEtB4C,EAAiB7G,OAAAC,EAAA,EAAAD,CAAA,CACrByF,aAAcU,EAAW1B,KACtB0B,GAGL,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAO0C,QAASD,EAAkBf,KAAMzB,UAAU,2BAA2BuC,GAC7E1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC2C,EAAD/G,OAAAqG,OAAA,CAAOtG,KAAK,QAAQsE,UAAU,gBAAmBwC,KAEnD3C,EAAAC,EAAAC,cAAC4C,EAAD,CAAYvC,IAAKoC,EAAkBpC,IAAKC,IAAKmC,EAAkBnC,IAAKtD,QAAShB,GAASyG,EAAkBpB,iBCV1GwB,EAAmB,SAAA1E,GAAA,IAAGjC,EAAHiC,EAAGjC,UAAWC,EAAdgC,EAAchC,KAAMC,EAApB+B,EAAoB/B,KAAMC,EAA1B8B,EAA0B9B,cAAemD,EAAzCrB,EAAyCqB,QAAzC,OACrBM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC8C,EAAD,CAAU5C,OAAO,oBACfJ,EAAAC,EAAAC,cAAC+C,EAAD,CAAYrB,KAAK,YAAYc,MAAM,kBAAkBnC,IAAI,KAAKC,IAAI,KAAKtE,MAAOE,IAC9E4D,EAAAC,EAAAC,cAAC+C,EAAD,CAAYrB,KAAK,OAAOc,MAAM,aAAanC,IAAI,KAAKC,IAAI,KAAKtE,MAAOG,IACpE2D,EAAAC,EAAAC,cAAC+C,EAAD,CAAYrB,KAAK,OAAOc,MAAM,aAAanC,IAAI,KAAKC,IAAI,KAAKtE,MAAOI,IACpE0D,EAAAC,EAAAC,cAAC+C,EAAD,CAAYrB,KAAK,gBAAgBc,MAAM,eAAYnC,IAAI,IAAIC,IAAI,KAAKtE,MAAOK,MAG/EyD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,oCACV+C,IAAI,sBACJC,IAAKzD,OAaEqD,EAFfA,EAAmBP,YALK,SAAChH,GAAD,OAAAM,OAAAC,EAAA,EAAAD,CAAA,GACnBN,EAAMD,WADa,CAEtBmE,QAASlE,EAAMoE,OAAOH,SAASC,WAGd8C,CAAyBO,GCrB7BK,EARI,SAAA/E,GAAA,IAAGqE,EAAHrE,EAAGqE,MAAUT,EAAbnG,OAAAoG,EAAA,EAAApG,CAAAuC,EAAA,kBACjB2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBACfH,EAAAC,EAAAC,cAAC2C,EAAD/G,OAAAqG,OAAA,CAAOhC,UAAU,mBAAmBtE,KAAK,SAAYoG,IADvD,IACwES,GAAST,EAAW/F,SCQjFmH,EATU,kBACvBrD,EAAAC,EAAAC,cAAC8C,EAAD,CAAU5C,OAAO,6BACfJ,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,mBAAmBc,MAAM,YAAYxG,MAAM,YAAYoF,gBAAc,IACtFtB,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,mBAAmBc,MAAM,gBAAaxG,MAAM,aAC7D8D,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,mBAAmBc,MAAM,gCAAgCxG,MAAM,mBAChF8D,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,mBAAmBc,MAAM,aAAaxG,MAAM,cCIlDqH,EATM,SAACxD,GAAD,OACnBC,EAAAC,EAAAC,cAAC8C,EAAD,CAAU5C,OAAO,gBACfJ,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,eAAec,MAAM,aAAaxG,MAAM,YAAYoF,gBAAc,IACnFtB,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,eAAec,MAAM,kBAAkBxG,MAAM,SAC9D8D,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,eAAec,MAAM,+BAA+BxG,MAAM,WAC3E8D,EAAAC,EAAAC,cAACoD,EAAD,CAAY1B,KAAK,eAAec,MAAM,iBAAiBxG,MAAM,WCFlDsH,EANI,SAACzD,GAAD,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,UAAQrE,KAAK,SAASsE,UAAU,4BAAhC,4ECkBWsD,GAhBK,SAAApF,GAAA,IAAGqF,EAAHrF,EAAGqF,UAAWC,EAAdtF,EAAcsF,kBAAmB7E,EAAjCT,EAAiCS,OAAjC,OAClBkB,EAAAC,EAAAC,cAAC0D,GAAA3D,EAAD,CAAY4D,OAAQH,EAAWI,aAAa,yBAC1C9D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+CAA+C4D,QAASJ,GAA1E,QACA3D,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXrB,EAAO8C,KADV,IACgB5B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,WAAoCrB,EAAOkF,SAE3DhE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OACEC,UAAU,oCACV+C,IAAG,YAAApG,OAAcgC,EAAO8C,MACxBuB,IAAKrE,EAAOmF,SAAWC,SCNvBC,eACJ,SAAAA,IAAc,IAAAxD,EAAA,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAA+E,KAAAsD,IACZxD,EAAA7E,OAAAgF,EAAA,EAAAhF,CAAA+E,KAAA/E,OAAAiF,EAAA,EAAAjF,CAAAqI,GAAAnD,KAAAH,QACKrF,MAAQ,CAAEkI,WAAW,GAC1B/C,EAAKyD,kBAAoBzD,EAAKyD,kBAAkBlD,KAAvBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAA6E,KACzBA,EAAKgD,kBAAoBhD,EAAKgD,kBAAkBzC,KAAvBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAA6E,KAJbA,iFAOImB,GAChBA,EAAMuC,iBACNxD,KAAK6C,gDAIL7C,KAAKyD,SAAS,CAAEZ,WAAW,8CAGX5B,GAChBA,EAAMuC,iBACNxD,KAAKyD,SAAS,CAAEZ,WAAW,qCAI3B,OACE1D,EAAAC,EAAAC,cAAA,QAAMtE,OAAO,IAAI2I,SAAU1D,KAAKuD,mBAC9BpE,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAD,MACA1E,EAAAC,EAAAC,cAACyE,EAAD,MACA3E,EAAAC,EAAAC,cAAC0E,GAAD,CACElB,UAAW7C,KAAKrF,MAAMkI,UACtBC,kBAAmB9C,KAAK8C,kBACxB7E,OAAQ+B,KAAKd,MAAMjB,iBAhCJwD,IAAMC,eA6ChB4B,GAFfA,GAAa3B,YAJW,SAAChH,GAAD,MAAY,CAClCsD,OZvCuB,SAACtD,GAAD,OAFA8D,EADN,SAAC9D,GAAD,OAAWA,EAAMoE,OAAON,QAKvCuF,CAAWrJ,GAJmBsJ,EAK9B/F,EAAqBgG,EAAsBvJ,IALJ8D,EAAQwF,GAA3B,IAACxF,EAASwF,EYyCxBE,CAAUxJ,KAGPgH,CAAyB2B,ICrCvB3B,uBAJM,SAAChH,GAAD,MAAY,CAC/B0I,QAAiC,UAAxB1I,EAAMoE,OAAOC,SAGT2C,CAVH,SAAAnE,GAAA,IAAG6F,EAAH7F,EAAG6F,QAAH,OACVlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACX+D,EAAU,aAAelE,EAAAC,EAAAC,cAAC+E,GAAD,oBCQzBC,GAAQC,YACZxF,EACAyF,OAAOC,8BAAgCD,OAAOC,gCANvBC,MAAM1F,KAAO2F,aACnCC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA5F,GAAM,OAAIsF,GAAM1D,SAAS,CAAE5B,SAAQ/D,KAAM,mBASjD8J,IAASC,OACP5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAUX,MAAOA,IACflF,EAAAC,EAAAC,cAAC4F,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.79bad88e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.72628e44.gif\";","const attributes = (state = {}, action) => {\n  switch (action.type) {\n    case 'UPDATE_ATTRIBUTE':\n      return {...state, [action.attributeName]: action.value};\n    default:\n      return state;\n  }\n};\n\nexport default attributes;\n","import findIndex from 'lodash/findIndex';\n\n// These are the thresholds for each body measurement\n// Example: the shoulder measurement goes from up to 27, up to 31 (and more than 27), ... and beyond 59\nconst MEASUREMENTS_THRESHOLDS = {\n      shoulders: [27, 31, 35, 39, 43, 47, 51, 55, 59, 64],\n           neck: [25, 27, 30, 32, 35, 37, 40, 43, 46, 49],\n           head: [40, 44, 48, 52, 56, 60, 64, 68, 72, 79],\n  earToShoulder: [8, 10, 12, 14, 16, 18, 20, 22, 24, 27]\n};\n\nconst thresholdsFor = (measurement) => MEASUREMENTS_THRESHOLDS[measurement] || [];\n\nconst scoreForValue = (value, thresholds) => {\n  const index = findIndex(thresholds, (measurement) => (value <= measurement));\n  if(index === -1) { throw new Error(`Could not find a score for value: ${value}`) };\n  return index + 1; // we need to add one because the array is 0-indexed\n};\n\nconst getScoreForAttribute = (attributeName, value) =>\n  scoreForValue(value, thresholdsFor(attributeName));\n\nconst bodyMeasurements = (state = {}, action) => {\n  switch (action.type) {\n    case 'UPDATE_ATTRIBUTE':\n      // here we are only interested in the attributes from MEASUREMENTS_THRESHOLDS\n      if(MEASUREMENTS_THRESHOLDS.hasOwnProperty(action.attributeName)) {\n        return {\n          ...state,\n          [action.attributeName]: getScoreForAttribute(action.attributeName, action.value)\n        };\n      } else {\n        return state;\n      }\n    default:\n      return state;\n  }\n};\n\nconst sumTotal = (total, current) => total + parseInt(current, 10);\nexport const totalScore = (state) => Object.values(state).reduce(sumTotal, 0);\n\nexport default bodyMeasurements;\n","const SLEEPING_POSITION_SCORES = {\n  bellyDown: 1,\n  backDown: 1.2,\n  lateralLeaning: 1.3,\n  lateral: 1.5\n};\n\nconst sleepingPosition = (state = 1, action) => {\n  switch (action.type) {\n    case 'UPDATE_ATTRIBUTE':\n      // here we are only interested in the attributeName sleepingPosition\n      if(action.attributeName === 'sleepingPosition') {\n        const sleepingPositionScore = SLEEPING_POSITION_SCORES[action.value];\n        if(sleepingPositionScore === undefined) {\n          throw new Error(`could not find a score for ${action.attributeName} with the value of ${action.value}`);\n        }\n        return sleepingPositionScore;\n      } else {\n        return state;\n      }\n    default:\n      return state;\n  }\n};\n\nexport const totalScore = (sleepingPosition = 1) => sleepingPosition;\n\nexport default sleepingPosition;\n","const MATTESS_TYPE_SCORES = {\n  watterBed: 1,\n  soft: 1.2,\n  medium: 1.3,\n  hard: 1.5\n};\n\nconst mattressType = (state = 1, action) => {\n  switch (action.type) {\n    case 'UPDATE_ATTRIBUTE':\n      // here we are only interested in the attributeName mattressType\n      if(action.attributeName === 'mattressType') {\n        const mattressTypeScore = MATTESS_TYPE_SCORES[action.value];\n        if(mattressTypeScore === undefined) {\n          throw new Error(`could not find a score for ${action.attributeName} with the value of ${action.value}`);\n        }\n        return mattressTypeScore;\n      } else {\n        return state;\n      }\n    default:\n      return state;\n  }\n};\n\nexport const totalScore = (mattressType = 1) => mattressType;\n\nexport default mattressType;\n","import { combineReducers } from 'redux';\n\nimport bodyMeasurements, * as fromBodyMeasurements from './bodyMeasurements';\nimport sleepingPosition, * as fromSleepingPosition from './sleepingPosition';\nimport mattressType, * as fromMattressType from './mattressType';\n\nexport const totalScore = ({ scores }) =>\n  fromBodyMeasurements.totalScore(scores.bodyMeasurements) *\n  fromSleepingPosition.totalScore(scores.sleepingPosition) *\n  fromMattressType.totalScore(scores.mattressType);\n\nconst scores = combineReducers({\n  bodyMeasurements,\n  sleepingPosition,\n  mattressType\n });\n\nexport default scores;\n","import flow from 'lodash/fp/flow';\nimport sortBy from 'lodash/fp/sortBy';\nimport find from 'lodash/fp/find';\nimport thru from 'lodash/fp/thru';\n\n// These are the score thresholds for each pillow\n// Example: a score of up to 21 corresponds to pillow1, a score of 27 corresponds to pillow2, and so on.\nconst SCORE_THRESHOLDS = [\n  { maximumScore: 36, pillow: \"small\" },\n  { maximumScore: 66, pillow: \"medium\" },\n  { maximumScore: 90, pillow: \"big\" }\n];\n\nconst getPillowSizeByScore = (score, thresholds = SCORE_THRESHOLDS) => {\n  return flow(\n   sortBy([ 'maximumScore' ]),\n   find(({ maximumScore }) => score <= maximumScore),\n   thru(Object) // this step is necessary because find might return undefined\n  )(thresholds)\n  .pillow;\n};\n\nexport default getPillowSizeByScore;\n","const emptyConfig = {\n  pillows: {\n    small: {},\n    medium: {},\n    big: {}\n  },\n  pictures: {\n    example: \"\"\n  }\n}\n\nexport default (state = emptyConfig, action) => {\n  switch (action.type) {\n    case 'CONFIG_READY':\n      return { ...state, ...action.config, status: 'READY' };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport attributes from './attributes';\nimport scores, * as fromScores from './scores/';\nimport getPillowSizeByScore from './pillowSizeByScore';\nimport config from './config';\n\nconst reducer = combineReducers({ attributes, scores, config });\n\nexport default reducer;\n\nconst getPillows = (state) => state.config.pillows;\nconst getPillowBySize = (pillows, size) => pillows[size];\n\nexport const getPillow = (state) =>\n  getPillowBySize(\n    getPillows(state),\n    getPillowSizeByScore(fromScores.totalScore(state))\n);\n","import React from 'react';\n\nimport '../bootstrap.min.css'\n\nconst Fieldset = (props) => (\n  <fieldset className=\"form-group row\">\n    <legend className=\"col-form-legend\">{props.legend}</legend>\n    <hr />\n    <div className=\"col-sm-12\">\n      {props.children}\n    </div>\n  </fieldset>\n)\n\nexport default Fieldset;\n","import React from 'react';\n\nimport '../bootstrap.min.css'\n\nconst start = 'bis';\nconst end = 'von';\n\nconst prefix = (current, min, max) => {\n  if (current === min) {\n    return start;\n  } else if (current === max) {\n    return end;\n  } else {\n    return \"\";\n  }\n};\n\nconst score = (current, min, max) => prefix(current, min, max) + \" \" + current + \" cm\";\n\nconst ScoreLabel = ({current, min, max}) => (\n  <span className=\"col-sm-3 score\">{score(current, min, max)}</span>\n);\n\nexport default ScoreLabel;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateAttribute } from '../actions';\n\nclass Input extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n\n  isChecked() {\n    return this.isCheckable() && (this.props.checked || this.props.defaultChecked);\n  }\n\n  isCheckable() {\n    return this.props.type === 'checkbox' || this.props.type === 'radio';\n  }\n\n  initialValue() {\n    return this.props.value || this.props.defaultValue;\n  }\n\n  dispatchUpdateAttribute(attributeName, value) {\n    this.props.dispatch(updateAttribute({ attributeName, value }));\n  }\n\n  componentDidMount() {\n    if(this.isCheckable() && !this.isChecked()){ return; }\n\n    this.setInitialValues();\n  }\n\n  setInitialValues() {\n    this.dispatchUpdateAttribute(this.props.name, this.initialValue());\n  }\n\n  onChangeHandler(event) {\n    this.dispatchUpdateAttribute(event.target.name, event.target.value);\n  }\n\n  render() {\n    const { dispatch, ...inputProps} = this.props;\n    return (\n      <input {...inputProps} onInput={this.onChangeHandler} onChange={this.onChangeHandler} />\n    )\n  }\n};\n\nInput = connect()(Input);\n\nexport default Input;\n","const updateAttribute = ({ attributeName, value }) => ({\n  type: 'UPDATE_ATTRIBUTE',\n  attributeName,\n  value\n});\n\nexport { updateAttribute } ;\n","import React from 'react';\n\nimport ScoreLabel from './ScoreLabel';\nimport Input from './Input';\nimport '../bootstrap.min.css'\n\nconst RangeInput = (props) => {\n  const { value, label, ...inputProps } = props;\n  const defaultInputProps = {\n    defaultValue: inputProps.min,\n    ...inputProps\n  };\n\n  return (\n    <div className=\"form-group row\">\n      <label htmlFor={defaultInputProps.name} className=\"col-sm-4 col-form-label\">{label}</label>\n      <div className=\"col-sm-5\">\n        <Input type=\"range\" className=\"form-control\" {...defaultInputProps} />\n      </div>\n      <ScoreLabel min={defaultInputProps.min} max={defaultInputProps.max} current={value || defaultInputProps.defaultValue} />\n    </div>\n  );\n}\n\nexport default RangeInput;\n","import React from 'react';\n\nimport Fieldset from './Fieldset';\nimport RangeInput from './RangeInput';\n\nimport { connect } from 'react-redux';\n\nimport '../bootstrap.min.css';\n\nlet BodyMeasurements = ({ shoulders, neck, head, earToShoulder, example }) => (\n  <div className=\"row align-items-center\">\n    <div className=\"col-md-8 col-sm-12\">\n      <Fieldset legend=\"Körpermaße\">\n        <RangeInput name='shoulders' label='Schulterabstand' min='23' max='64' value={shoulders} />\n        <RangeInput name='neck' label='Halsumfang' min='22' max='49' value={neck} />\n        <RangeInput name='head' label='Kopfumfang' min='36' max='79' value={head} />\n        <RangeInput name='earToShoulder' label='Halslänge' min='4' max='27' value={earToShoulder} />\n      </Fieldset>\n    </div>\n    <div className=\"col-md-4 col-sm-12\">\n      <img\n        className=\"img-fluid rounded mx-auto d-block\"\n        alt='Vermessungsbeispiel'\n        src={example}\n      />\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  ...state.attributes,\n  example: state.config.pictures.example\n});\n\nBodyMeasurements = connect(mapStateToProps)(BodyMeasurements);\n\nexport default BodyMeasurements;\n","import React from 'react';\n\nimport Input from './Input';\nimport '../bootstrap.min.css'\n\nconst RadioInput = ({ label, ...inputProps}) => (\n  <div className=\"form-check\">\n    <label className=\"form-check-label\">\n      <Input className=\"form-check-input\" type=\"radio\" {...inputProps} /> { label || inputProps.value }\n    </label>\n  </div>\n)\n\nexport default RadioInput;\n","import React from 'react';\n\nimport Fieldset from './Fieldset';\nimport RadioInput from './RadioInput';\n\nimport '../bootstrap.min.css';\n\nconst SleepingPosition = () => (\n  <Fieldset legend=\"Bevorzugte Schlafposition\">\n    <RadioInput name=\"sleepingPosition\" label=\"Bauchlage\" value=\"bellyDown\" defaultChecked />\n    <RadioInput name=\"sleepingPosition\" label=\"Rückenlage\" value=\"backDown\" />\n    <RadioInput name=\"sleepingPosition\" label=\"Seitenlage nach vorne gebeugt\" value=\"lateralLeaning\" />\n    <RadioInput name=\"sleepingPosition\" label=\"Seitenlage\" value=\"lateral\" />\n  </Fieldset>\n);\n\nexport default SleepingPosition;\n","import React from 'react';\n\nimport Fieldset from './Fieldset';\nimport RadioInput from './RadioInput';\n\nimport '../bootstrap.min.css';\n\nconst MattressType = (props) => (\n  <Fieldset legend=\"Matratzenart\">\n    <RadioInput name=\"mattressType\" label=\"Wasserbett\" value=\"watterBed\" defaultChecked />\n    <RadioInput name=\"mattressType\" label=\"Weiche Matratze\" value=\"soft\" />\n    <RadioInput name=\"mattressType\" label=\"Mittlere Matratzenfestigkeit\" value=\"medium\" />\n    <RadioInput name=\"mattressType\" label=\"Harte Matratze\" value=\"hard\" />\n  </Fieldset>\n);\n\nexport default MattressType;\n","import React from 'react';\n\nimport '../bootstrap.min.css';\n\nconst FormFooter = (props) => (\n  <div className=\"row justify-content-center\">\n    <button type=\"submit\" className=\"col-sm-4 btn btn-primary\">Mein perfektes Kissen &rarr;</button>\n  </div>\n);\n\nexport default FormFooter;\n","import React from 'react';\n\nimport ReactModal from 'react-modal';\n\nimport loading from '../assets/loading.gif';\n\nimport '../bootstrap.min.css';\n\nconst PillowModal = ({ showModal, onCloseModalClick, pillow }) => (\n  <ReactModal isOpen={showModal} contentLabel=\"Mein perfektes kissen\">\n    <button className='btn btn-outline-secondary btn-lg float-right' onClick={onCloseModalClick}>&times;</button>\n    <h1>Ihr perfektes Kissen: </h1>\n    <h2 className=\"display-3\">\n      {pillow.name} <small className=\"text-muted\">Höhe {pillow.height}</small>\n    </h2>\n    <br />\n    <img\n      className=\"img-fluid rounded mx-auto d-block\"\n      alt={`Bild von ${pillow.name}`}\n      src={pillow.picture || loading}\n    />\n  </ReactModal>\n);\n\nexport default PillowModal;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport BodyMeasurements from './BodyMeasurements';\nimport SleepingPosition from './SleepingPosition';\nimport MattressType from './MattressType';\nimport FormFooter from './FormFooter';\nimport PillowModal from './PillowModal';\n\nimport { getPillow } from '../reducers';\n\nimport '../bootstrap.min.css'\n\nclass PillowForm extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = { showModal: false }\n    this.formSubmitHandler = this.formSubmitHandler.bind(this);\n    this.onCloseModalClick = this.onCloseModalClick.bind(this);\n  }\n\n  formSubmitHandler(event) {\n    event.preventDefault();\n    this.showModal();\n  }\n\n  showModal() {\n    this.setState({ showModal: true });\n  }\n\n  onCloseModalClick(event) {\n    event.preventDefault();\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <form action=\"#\" onSubmit={this.formSubmitHandler}>\n        <BodyMeasurements />\n        <SleepingPosition />\n        <MattressType />\n        <FormFooter />\n        <PillowModal\n          showModal={this.state.showModal}\n          onCloseModalClick={this.onCloseModalClick}\n          pillow={this.props.pillow}\n        />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  pillow: getPillow(state)\n});\n\nPillowForm = connect(mapStateToProps)(PillowForm);\n\nexport default PillowForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport PillowForm from './PillowForm';\n\nimport './App.css';\n\nimport '../bootstrap.min.css';\n\nconst App = ({ loading }) => (\n  <div className=\"container\">\n    { loading ? \"LOADING...\" : <PillowForm />}\n  </div>\n);\n\nconst stateToProps = (state) => ({\n  loading: state.config.status !== 'READY'\n});\n\nexport default connect(stateToProps)(App);\n","import 'react-app-polyfill/ie9'; // adds support to IE9-11\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nimport App from './components/App';\n\nimport { config } from '../package.json';\n\nconst loadConfig = () => fetch(config.pillowsJSON)\n  .then(response => response.json())\n  .then(config => store.dispatch({ config, type: 'CONFIG_READY' }));\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nloadConfig();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}